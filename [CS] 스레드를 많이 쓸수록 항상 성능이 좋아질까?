### 스레드

- 프로세스 내에 존재하는 실행 단위
- 스레드가 여러개인 덕분에 우리는 동시 작업이 가능하다 (음악을 들으며 웹서핑을 하거나 파일을 다운 받는 등)
- 스레드가 많을 수록 동시 처리 작업 수가 증가하는 것이니, 멀티스레드가 무조건 성능이 좋을 수도 있다.

✅ **하지만 모든 상황에 대해 무조건 멀티 스레드가 싱글 스레드보다 무조건 좋다고 말할 순 없다.**

- 모든 기술들에는 각각의 기회비용이 존재하고, 싱글 스레드와 멀티 스레드 역시 각각의 장점에 맞는 기회비용이 존재한다.

> 이 게시글을 통해서 스레드의 내부 구조까지 파악하고 동시성(Concurrency)에 대한 깊게 공부하자
> 

### 임계 영역(Critical Section)에 대한 동기화 비용

멀티스레드

- 자원을 공유하기  때문에 프로세스 생성에 비해 적은 메모리와 자원을 소모하고 컨텍스트 스위칭도 멀티 프로세스에 비해 빠르다는 장점이 있다.

> **컨텍스트 스위칭**
> 
> 
> 👉 **한 프로세스로 부터 CPU를 다른 프로세스로 넘겨주는 작업**
> Context: CPU가 해당 프로세스를 실행하면서 가지는 정보
> 
> Swith: 이를 다른 프로세스로 바꾸겠다는 뜻이다. 
> 
> 초당 100번에서 1000번까지 일어나는 매우 빈번한 동작이기 때문에 성능에 매우 민감하다!
> 

임계영역(Critical Section)

- 멀티 스레드 프로그래밍에서 임계영역은 공유 자원을 접근하는 코드 영역
- 대표적으로 전역 변수나 heap 메모리 영역
